function prob = Pt_ag(n,m,p,q,k,s,t)
%s is number of samples for this trial (in global context this is s/2)

prob = 0;

intmin = -0;
intmax = 1;

stdp = p*(1-p)*s;
stdq = q*(1-q)*s;
if t==0
    integral = @(x) nchoosek(n^2-m,k).*k...
        .* normcdf(x,p,stdp).^(n^2-m-k)...
        .* (1-normcdf(x,p,stdp)).^(k-1)...
        .* normpdf(x,p,stdp)...
        .* normcdf(x,q,stdq).^m;
    prob = quadl(integral,intmin,intmax );
elseif t==k
    integral = @(x) nchoosek(m,k).*k ...
        .* normcdf(x,q,stdq).^(m-k) ...
        .* (1-normcdf(x,q,stdq)).^(k-1)...
        .* normpdf(x,q,stdq)...
        .* normcdf(x,p,stdp).^(n^2-m);
    prob = quadl(integral,intmin,intmax );
elseif t>k || t<0
    'error: t>k or t<0'
else
    c1 = nchoosek(n,m-t)*(m-t)*(n-m+t);
    c2 = nchoosek(n^2-m,k-t)*(n*n-m-k+t)*(k-t);
    integral = @(w,x,y,z) c1 ...
        .* normcdf(x,q,stdq).^(m-t-1)...
        .* normpdf(x,q,stdq)...
        .* normpdf(y,q,stdq)...
        .* (1.-normcdf(y,q,stdq)).^(n-m+t-1)...
        .* c2...
        .* normcdf(w,p,stdp).^(n*n-m-k+t-1)...
        .* normpdf(w,p,stdp)...
        .* normpdf(z,p,stdp)...
        .* (1.-normcdf(z,p,stdp)).^(k-t-1);
    temp1 = @(x,y,z) quadvec(@(w)integral(w,x,y,z), intmin, min(y,z));
    temp2 = @(y,z) quadvec(@(x) temp1(x,y,z), intmin, min(y,z));
    temp3 = @(z) quadvec(@(y) temp2(y,z), intmin, intmin);
    prob = quadvec(@(z) temp3(z), intmin, intmin);
%    temp3 = @(z) quadl(@(y) temp2(y,z), intmin, intmax);
%    prob = quad(temp3, intmin, intmax);

%    prob = quad(quad(quad(quad(integral...
%        ,intmin,min(y,z) )...
%        ,intmin,min(y,z) )...
%        ,intmin,intmax)...
%        ,intmin,intmax);
end

return;